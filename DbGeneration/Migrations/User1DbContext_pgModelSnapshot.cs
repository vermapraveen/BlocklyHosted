// <auto-generated />
using System;
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DbGeneration.Migrations
{
    [DbContext(typeof(User1DbContext_pg))]
    partial class User1DbContext_pgModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ConsoleApp1.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<int>("value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("ConsoleApp1.BaseMatrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("connections")
                        .HasColumnType("text");

                    b.Property<bool>("isStaging")
                        .HasColumnType("boolean");

                    b.Property<string>("itemsid")
                        .HasColumnType("text");

                    b.Property<int>("multiplierQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("relationshipContext")
                        .HasColumnType("text");

                    b.Property<int?>("sellerContextId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("itemsid");

                    b.HasIndex("sellerContextId");

                    b.ToTable("BaseMatrix");
                });

            modelBuilder.Entity("ConsoleApp1.BaseMatrixItem", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("deltaSelectionsid")
                        .HasColumnType("text");

                    b.Property<Guid>("instanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("itemsid")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("deltaSelectionsid");

                    b.HasIndex("itemsid");

                    b.ToTable("BaseMatrixItem");
                });

            modelBuilder.Entity("ConsoleApp1.ChangeSelection", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<int?>("actionsId")
                        .HasColumnType("integer");

                    b.Property<Guid>("instanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("actionsId");

                    b.ToTable("ChangeSelection");
                });

            modelBuilder.Entity("ConsoleApp1.ItemItem", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("deltaSelectionsid")
                        .HasColumnType("text");

                    b.Property<Guid>("instanceId")
                        .HasColumnType("uuid");

                    b.Property<int?>("optionsId")
                        .HasColumnType("integer");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("deltaSelectionsid");

                    b.HasIndex("optionsId");

                    b.ToTable("ItemItem");
                });

            modelBuilder.Entity("ConsoleApp1.Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("subscriptionUpgrade")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("ConsoleApp1.TransactionContext", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("businessUnitId")
                        .HasColumnType("integer");

                    b.Property<int>("companyNumber")
                        .HasColumnType("integer");

                    b.Property<string>("country")
                        .HasColumnType("text");

                    b.Property<string>("currency")
                        .HasColumnType("text");

                    b.Property<string>("customerSet")
                        .HasColumnType("text");

                    b.Property<string>("language")
                        .HasColumnType("text");

                    b.Property<string>("region")
                        .HasColumnType("text");

                    b.Property<string>("segment")
                        .HasColumnType("text");

                    b.Property<string>("sourceApplicationName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransactionContext");
                });

            modelBuilder.Entity("ConsoleApp1.BaseMatrix", b =>
                {
                    b.HasOne("ConsoleApp1.BaseMatrixItem", "items")
                        .WithMany()
                        .HasForeignKey("itemsid");

                    b.HasOne("ConsoleApp1.TransactionContext", "sellerContext")
                        .WithMany()
                        .HasForeignKey("sellerContextId");
                });

            modelBuilder.Entity("ConsoleApp1.BaseMatrixItem", b =>
                {
                    b.HasOne("ConsoleApp1.ChangeSelection", "deltaSelections")
                        .WithMany()
                        .HasForeignKey("deltaSelectionsid");

                    b.HasOne("ConsoleApp1.ItemItem", "items")
                        .WithMany()
                        .HasForeignKey("itemsid");
                });

            modelBuilder.Entity("ConsoleApp1.ChangeSelection", b =>
                {
                    b.HasOne("ConsoleApp1.Action", "actions")
                        .WithMany()
                        .HasForeignKey("actionsId");
                });

            modelBuilder.Entity("ConsoleApp1.ItemItem", b =>
                {
                    b.HasOne("ConsoleApp1.ChangeSelection", "deltaSelections")
                        .WithMany()
                        .HasForeignKey("deltaSelectionsid");

                    b.HasOne("ConsoleApp1.Options", "options")
                        .WithMany()
                        .HasForeignKey("optionsId");
                });
#pragma warning restore 612, 618
        }
    }
}
